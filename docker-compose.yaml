version: "2"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    container_name: zookeeper
    networks:
      - stock_market_net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    healthcheck:
      test: echo srvr | nc localhost 2181 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  kafka_12:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    networks:
      - stock_market_net
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 29093:29093
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_12:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: kafka-topics --bootstrap-server kafka_12:9092 --list
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15
    container_name: postgres
    networks:
      - stock_market_net
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=stock_market
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  superset:
    build:
      context: ./superset
      dockerfile: Dockerfile
    container_name: superset
    networks:
      - stock_market_net
    depends_on:
      - postgres
    environment:
      SUPERSET_ADMIN_USERNAME: "Theyanesh"
      SUPERSET_ADMIN_EMAIL: "Theyanesh"
      SUPERSET_ADMIN_PASSWORD: "Theyanesh"
      SUPERSET_SECRET_KEY: "your-secret-key"  # Set 
      ENABLE_PROXY_FIX: "true"
      SUPERSET_DATABASE_URI: postgresql://postgres:postgres@postgres:5432/stock_market
    ports:
      - "8088:8088"
    volumes:
      - ./superset_config.py:/app/pythonpath/superset_config.py
      - superset-home:/app/superset_home
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  stock_market_net:
    driver: bridge

volumes:
  postgres_data:
  superset-home: